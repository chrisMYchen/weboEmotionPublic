{
    "1": {
        "id": 1,
        "class": "Sequence",
        "name": "",
        "asset-pack": "core",
        "children": [
            4,
            6,
            "2043333a-449f-464c-b15d-06804c8d5989",
            "01c569e5-13ee-4ed0-afcf-3b9d3c4b93d9",
            "fc4607de-d98f-4eee-800d-411c98442fdf"
        ],
        "decorators": [],
        "options": {}
    },
    "4": {
        "id": 4,
        "class": "PlayAnimation",
        "name": "Play a greeting",
        "asset-pack": "core",
        "parent": 1,
        "options": {
            "animPath": "greeting.keys",
            "config": [
                "(animation) => {",
                "}"
            ]
        }
    },
    "6": {
        "id": 6,
        "class": "PlayAudio",
        "name": "Bawhoop",
        "asset-pack": "core",
        "parent": 1,
        "options": {
            "audioPath": "FX_Bawhoop.mp3"
        }
    },
    "meta": {
        "version": 1
    },
    "2043333a-449f-464c-b15d-06804c8d5989": {
        "id": "2043333a-449f-464c-b15d-06804c8d5989",
        "class": "Subtree",
        "name": "Idle",
        "options": {
            "behaviorPath": "idle.bt",
            "getNotepad": [
                "() => {",
                "    return {};",
                "}"
            ],
            "onResult": [
                "(treeResult) => {",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": 1,
        "decorators": [
            "97aaa2f5-719f-46e4-90da-bc71f9e5ba89"
        ]
    },
    "97aaa2f5-719f-46e4-90da-bc71f9e5ba89": {
        "id": "97aaa2f5-719f-46e4-90da-bc71f9e5ba89",
        "class": "SucceedOnEmbedded",
        "name": "",
        "options": {
            "rule": "hey_jibo",
            "onResult": [
                "(listener) => {",
                "\tlistener.on('hey-jibo', function(asrResult, speakerIds) {",
                "",
                "\t});",
                "}"
            ]
        },
        "asset-pack": "core"
    },
    "01c569e5-13ee-4ed0-afcf-3b9d3c4b93d9": {
        "id": "01c569e5-13ee-4ed0-afcf-3b9d3c4b93d9",
        "class": "PlayAudio",
        "name": "Response when no longer idle",
        "options": {
            "audioPath": "FX_Bleep.mp3"
        },
        "asset-pack": "core",
        "parent": 1
    },
    "277d30f5-74a9-4c22-b66b-e75f1af3ae65": {
        "id": "277d30f5-74a9-4c22-b66b-e75f1af3ae65",
        "class": "LookAt",
        "name": "Find nearest target - person to interact with",
        "options": {
            "getTarget": [
                "() => {",
                "    let entity = jibo.lps.getClosestVisualEntity();",
                "    notepad.foundFace = false;",
                "    let position = {x: 1, y: 0, z: 1};",
                "    if (entity) {",
                "        //If this entity exists, then we set our target position and foundFace is now true",
                "        position = {x: entity.position.x, y: entity.position.y, z: entity.position.z};",
                "        notepad.foundFace = true;",
                "    }",
                "    return position;",
                "}"
            ],
            "isContinuous": false,
            "config": [
                "(lookAt) => {",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": "fc4607de-d98f-4eee-800d-411c98442fdf",
        "decorators": [
            "c71b4bd5-9780-4b20-beae-a4119901c9bc"
        ]
    },
    "c71b4bd5-9780-4b20-beae-a4119901c9bc": {
        "id": "c71b4bd5-9780-4b20-beae-a4119901c9bc",
        "class": "WhileCondition",
        "name": "",
        "options": {
            "init": [
                "() => {",
                "}"
            ],
            "conditional": [
                "() => {",
                "    //Continue to try to find face in viewport until we lock onto a target",
                "    return (notepad.foundFace !== true);",
                "}"
            ]
        },
        "asset-pack": "core"
    },
    "4b13a3ae-fd66-42f4-aef1-cde8e39a5660": {
        "id": "4b13a3ae-fd66-42f4-aef1-cde8e39a5660",
        "class": "TextToSpeech",
        "name": "Response when target is found",
        "options": {
            "words": "There you are! How are you feeling?",
            "onWord": [
                "(word) => {",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": "fc4607de-d98f-4eee-800d-411c98442fdf"
    },
    "d3888fcc-2fb6-4101-a32e-0a9b8232ab7d": {
        "id": "d3888fcc-2fb6-4101-a32e-0a9b8232ab7d",
        "class": "TakePhoto",
        "name": "Take image of target person",
        "options": {
            "resolution": 2,
            "onPhoto": [
                "(error, imageUrl) => {",
                "  notepad.imageUrl = imageUrl;",
                "}"
            ],
            "noDistortion": true
        },
        "asset-pack": "core",
        "parent": "f62d81fd-090d-4b71-a922-b3882a84cf90",
        "decorators": [
            "5a56fb6c-cc6d-474c-af90-de9d2e070ac4"
        ]
    },
    "5f90a6b3-7836-4e79-a440-47540941f725": {
        "id": "5f90a6b3-7836-4e79-a440-47540941f725",
        "class": "ExecuteScript",
        "name": "Processes image for emotion",
        "options": {
            "exec": [
                "() => {",
                "  //Here we are preparing to display the taken photo on Jibo's face",
                "  //for debugging purposes",
                "  //redraw every frame",
                "  jibo.face.renderOnlyWhenDirty = false; ",
                "  ",
                "  // create new Pixi sprite",
                "  notepad.photo = new PIXI.Sprite();",
                "  ",
                "  // set the texture of the sprite to the imageURL",
                "  notepad.photo.texture = PIXI.Texture.fromImage(notepad.imageUrl);",
                "  ",
                "  //Now we use the Emotion API to process data",
                "  const fs = require('fs');",
                "  const request = require('request');",
                "  //Creates file from taken picture",
                "  //Use datestring as a unique photo identifier",
                "  let bitmap;",
                "  let imageAsBinaryData;",
                "  var dateString = \"jiboPhotos/\" + new Date().getTime() + \".jpg\";",
                "  request.get({url: notepad.imageUrl, encoding: 'binary'}, function (err, reponse, body) {",
                "    fs.writeFile(dateString, body, 'binary', function(err) {",
                "      if (err) {",
                "          console.log(err);",
                "      }",
                "      else {",
                "          let oxfordEmotion = require(\"node-oxford-emotion\")(\"3e43fabb36c940eaaa66b84ab5840869\");",
                "          bitmap = fs.readFileSync(dateString);",
                "          imageAsBinaryData = new Buffer(bitmap.toString('binary'),'binary');",
                "          //Now with this saved file, we use the Emotion API",
                "          let emotion = oxfordEmotion.recognize(\"image\", imageAsBinaryData, function(cb) {",
                "              const data = JSON.parse(cb);",
                "              const firstFaceEmotions = data[0]['scores'];",
                "              //Loop to find most prevalent emotion",
                "              var mostApparentEmotion = \"anger\";",
                "              var mostApparentEmotionCertainty = 0;",
                "              for (var emotion in firstFaceEmotions){",
                "                if (firstFaceEmotions.hasOwnProperty(emotion)) {",
                "                     if (firstFaceEmotions[emotion] > mostApparentEmotionCertainty) {",
                "                        mostApparentEmotion = emotion;",
                "                        mostApparentEmotionCertainty = firstFaceEmotions[emotion];",
                "                     }",
                "                }",
                "              }",
                "              //notepad.mostApparentEmotion = mostApparentEmotion;",
                "              //for testing we hardcode to sad",
                "              notepad.mostApparentEmotion = \"neutral\";",
                "              notepad.mostApparentEmotionCertainty = mostApparentEmotionCertainty;",
                "              console.log('most apparent emotion', mostApparentEmotion);",
                "              console.log(notepad.mostApparentEmotion, mostApparentEmotionCertainty);",
                "              ",
                "              // set the texture of the sprite to the imageURL",
                "              notepad.photo.texture = PIXI.Texture.fromImage(notepad.imageUrl);",
                "                ",
                "              // add the sprite to the stage",
                "              jibo.face.stage.addChild(notepad.photo);",
                "              notepad.emotionLoaded = true;",
                "          });",
                "      }",
                "    });",
                "  });",
                "  ",
                "",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": "fc4607de-d98f-4eee-800d-411c98442fdf"
    },
    "83c8bbac-0b10-4e2b-8c46-0e43872b02b0": {
        "id": "83c8bbac-0b10-4e2b-8c46-0e43872b02b0",
        "class": "PlayAnimation",
        "name": "Photo capture animation",
        "options": {
            "animPath": "camera.keys",
            "config": [
                "(animation) => {",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": "f62d81fd-090d-4b71-a922-b3882a84cf90"
    },
    "f62d81fd-090d-4b71-a922-b3882a84cf90": {
        "id": "f62d81fd-090d-4b71-a922-b3882a84cf90",
        "class": "Parallel",
        "name": "",
        "options": {
            "succeedOnOne": false
        },
        "asset-pack": "core",
        "parent": "fc4607de-d98f-4eee-800d-411c98442fdf",
        "children": [
            "83c8bbac-0b10-4e2b-8c46-0e43872b02b0",
            "d3888fcc-2fb6-4101-a32e-0a9b8232ab7d"
        ]
    },
    "5a56fb6c-cc6d-474c-af90-de9d2e070ac4": {
        "id": "5a56fb6c-cc6d-474c-af90-de9d2e070ac4",
        "class": "StartOnAnimEvent",
        "name": "",
        "options": {
            "eventName": "shutter-click",
            "onReceived": [
                "(animFileName, payload) => {",
                "  console.log('photo shot');",
                "}"
            ]
        },
        "asset-pack": "core"
    },
    "defaeebb-ebb0-406f-b4a8-3a3a20d0bc98": {
        "id": "defaeebb-ebb0-406f-b4a8-3a3a20d0bc98",
        "class": "Subtree",
        "name": "happy emotion action",
        "options": {
            "behaviorPath": "happy.bt",
            "getNotepad": [
                "() => {",
                "    return {};",
                "}"
            ],
            "onResult": [
                "(treeResult) => {",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": "63330a0a-5803-421b-b383-89da3c8220a2",
        "decorators": [
            "edc71ebb-6af3-4bb9-9b3d-2a1fd2bc0c17"
        ]
    },
    "8d291747-8d52-4e16-8b7d-2f1d1db4bd9b": {
        "id": "8d291747-8d52-4e16-8b7d-2f1d1db4bd9b",
        "class": "Subtree",
        "name": "sad emotion action",
        "options": {
            "behaviorPath": "sad.bt",
            "getNotepad": [
                "() => {",
                "    return {};",
                "}"
            ],
            "onResult": [
                "(treeResult) => {",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": "63330a0a-5803-421b-b383-89da3c8220a2",
        "decorators": [
            "b03ce86d-e1c9-4b2c-8ccd-b27dd2baf6df"
        ]
    },
    "c570e8b9-2feb-488f-93cc-9ed7e8c92752": {
        "id": "c570e8b9-2feb-488f-93cc-9ed7e8c92752",
        "class": "Subtree",
        "name": "neutral emotion action",
        "options": {
            "behaviorPath": "neutral.bt",
            "getNotepad": [
                "() => {",
                "    return {};",
                "}"
            ],
            "onResult": [
                "(treeResult) => {",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": "63330a0a-5803-421b-b383-89da3c8220a2",
        "decorators": [
            "9a7e885a-f735-412a-ac37-8b0d18f6704e"
        ]
    },
    "fc4607de-d98f-4eee-800d-411c98442fdf": {
        "id": "fc4607de-d98f-4eee-800d-411c98442fdf",
        "class": "Sequence",
        "name": "",
        "options": {},
        "asset-pack": "core",
        "parent": 1,
        "decorators": [
            "ae712ced-a3fe-42a9-a864-b8feb1eac174"
        ],
        "children": [
            "277d30f5-74a9-4c22-b66b-e75f1af3ae65",
            "4b13a3ae-fd66-42f4-aef1-cde8e39a5660",
            "f62d81fd-090d-4b71-a922-b3882a84cf90",
            "5f90a6b3-7836-4e79-a440-47540941f725",
            "63330a0a-5803-421b-b383-89da3c8220a2"
        ]
    },
    "ae712ced-a3fe-42a9-a864-b8feb1eac174": {
        "id": "ae712ced-a3fe-42a9-a864-b8feb1eac174",
        "class": "WhileCondition",
        "name": "",
        "options": {
            "init": [
                "() => {",
                "}"
            ],
            "conditional": [
                "() => {",
                "    notepad = {};",
                "    return true;",
                "}"
            ]
        },
        "asset-pack": "core"
    },
    "edc71ebb-6af3-4bb9-9b3d-2a1fd2bc0c17": {
        "id": "edc71ebb-6af3-4bb9-9b3d-2a1fd2bc0c17",
        "class": "Case",
        "name": "",
        "options": {
            "conditional": [
                "() => {",
                "    if (notepad.mostApparentEmotion === \"happiness\") {",
                "        notepad.emotionExecuted = true;",
                "    }",
                "    return notepad.mostApparentEmotion === \"happiness\";",
                "}"
            ]
        },
        "asset-pack": "core"
    },
    "b03ce86d-e1c9-4b2c-8ccd-b27dd2baf6df": {
        "id": "b03ce86d-e1c9-4b2c-8ccd-b27dd2baf6df",
        "class": "Case",
        "name": "",
        "options": {
            "conditional": [
                "() => {",
                "  if (notepad.emotionLoaded !== true) {",
                "      return false;",
                "  } ",
                "  console.log(\"emotion is loaded!\");",
                "  if (notepad.mostApparentEmotion === \"sadness\") {",
                "      console.log(\"set emotion executed true\");",
                "      notepad.emotionExecuted = true;",
                "  }",
                "    return notepad.mostApparentEmotion === \"sadness\";",
                "}"
            ]
        },
        "asset-pack": "core"
    },
    "9a7e885a-f735-412a-ac37-8b0d18f6704e": {
        "id": "9a7e885a-f735-412a-ac37-8b0d18f6704e",
        "class": "Case",
        "name": "",
        "options": {
            "conditional": [
                "() => {",
                "",
                "    console.log(\"in switch emotion:\", notepad.mostApparentEmotion);",
                "    if (notepad.mostApparentEmotion === \"neutral\") {",
                "        notepad.emotionExecuted = true;",
                "    }",
                "    return notepad.mostApparentEmotion === \"neutral\";",
                "}"
            ]
        },
        "asset-pack": "core"
    },
    "63330a0a-5803-421b-b383-89da3c8220a2": {
        "id": "63330a0a-5803-421b-b383-89da3c8220a2",
        "class": "Switch",
        "name": "",
        "options": {},
        "asset-pack": "core",
        "parent": "fc4607de-d98f-4eee-800d-411c98442fdf",
        "decorators": [
            "3e92444f-a8cb-4738-a903-7d1f4eda9023"
        ],
        "children": [
            "c570e8b9-2feb-488f-93cc-9ed7e8c92752",
            "8d291747-8d52-4e16-8b7d-2f1d1db4bd9b",
            "defaeebb-ebb0-406f-b4a8-3a3a20d0bc98"
        ]
    },
    "3e92444f-a8cb-4738-a903-7d1f4eda9023": {
        "id": "3e92444f-a8cb-4738-a903-7d1f4eda9023",
        "class": "StartOnCondition",
        "name": "",
        "options": {
            "init": [
                "() => {",
                "}"
            ],
            "conditional": [
                "() => {",
                "  return notepad.emotionLoaded === true;",
                "}"
            ]
        },
        "asset-pack": "core"
    }
}
var assert = require("assert"),
    temp = require("../utils/temp-files.js"),
    keyframes = require("../../lib/index"),
    JiboKeyframeInfo = require("../../lib/jibo-keyframe-info"),
    BodyLayerClass = require("../../lib/layers/body-layer");

describe('keyframes.runtime', function(){
    describe('.create()', function(){
        it('should create the correct keyframes based on keyframeInfo', function(){
            var newKeyframes = keyframes.runtime.create(JiboKeyframeInfo);
            validateDefaults(newKeyframes);
        });
    });

    describe('.load()', function(){
        it('should be equivalent to a saved default keyframes file', function(){
            var newKeyframes = keyframes.runtime.load( __dirname + "/fixtures/defaults.keys", JiboKeyframeInfo );
            validateDefaults(newKeyframes);
        });
    });

    describe('.save()', function(){
        it('should save a file successfully and it should be reloadable', function(){
            temp.setup();

            var tempPath = temp.path("defaults.keys"),
                newKeyframes = keyframes.runtime.create(JiboKeyframeInfo);

            // Save out the keyframes and then load them back and verify that they
            // are the same
            keyframes.runtime.save( tempPath, newKeyframes);
            newKeyframes = keyframes.runtime.load(tempPath, JiboKeyframeInfo);

            validateDefaults(newKeyframes);

            temp.cleanup();
        });
    });
});

/*
 * Ensures that the passed in keyframes match the values of newly created keyframes
 * and it's keyframeInfo defaults
 */
function validateDefaults(newKeyframes){
    assert.equal(newKeyframes.framerate, 30, "Incorrect default framerate");
    assert.equal(newKeyframes.duration, 30, "Incorrect default duration");
    assert.equal(newKeyframes.version, "0.3.0", "Incorrect default version");
    assert.equal(newKeyframes.layers.length, 1, "Incorrect number of default layers");

    assert.equal(newKeyframes.layers[0].name, "Body", "Incorrect layer name");
    assert.equal(JiboKeyframeInfo.layerTypes[newKeyframes.layers[0].type], BodyLayerClass, "Incorrect layer type class");

    assert.equal(newKeyframes.layers[0].visible, true, "Incorrect layer visibility");
    assert.equal(newKeyframes.layers[0].locked, true, "Incorrect layer locked value");
}
